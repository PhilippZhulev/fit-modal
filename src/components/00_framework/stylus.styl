
//*****************
//***** RESET *****
//*****************

/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  line-height: 1.15;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
footer,
header,
nav,
section {
  display: block;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
figcaption,
figure,
main {
  display: block;
}
figure {
  margin: 1em 40px;
}
hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}
pre {
  font-family: monospace, monospace;
  font-size: 1em;
}
a {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
}
a:active,
a:hover {
  outline-width: 0;
}
abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}
b,
strong {
  font-weight: inherit;
}
b,
strong {
  font-weight: bolder;
}
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
dfn {
  font-style: italic;
}
mark {
  background-color: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
audio,
video {
  display: inline-block;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
img {
  border-style: none;
}
svg:not(:root) {
  overflow: hidden;
}
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}
button,
input {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}
progress {
  display: inline-block;
  vertical-align: baseline;
}
textarea {
  overflow: auto;
}
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}
details,
menu {
  display: block;
}
summary {
  display: list-item;
}
canvas {
  display: inline-block;
}
template {
  display: none;
}
[hidden] {
  display: none;
}


//fluid grid elements

*
  box-size border-box;
  max-height: 9999999999px;
  &:focus
    outline: none;
  &:active
    outline: none;

a,
button
  cursor: pointer

.container
  max-w-em 1200
  margin: 0 auto
  p-left-em: 15
  p-right-em 15
.row
  m-left-em: -15
  m-right-em -15
.np-row
  m-left-em 0
  m-right-em 0
.row:before
.row:after
.np-row:before
.np-row:after
.clear-fix:before
.clear-fix:after
  content ""
  display table
.clear-fix:after
.row:after
.np-row:after
  clear both
.col
  p-left-em 15
  p-right-em 15
  float left
.np-row
  .col
    p-left-em 0
    p-right-em 0


//GRID-GENERATED


for scr in (5000px 1200px 1025px 769px)
  MediaScreen = "@media screen and (max-width:" + scr + ")";
  if scr == 5000
    mi = ".col.xs";
    pull_left = ".-pull-xs-left";
    pull_right = ".-pull-xs-right";
    text_left = ".-text-xs-left";
    text_right = ".-text-xs-right"
    text_center = ".-text-xs-center"
    MediaScreen = ""
  else if scr == 1200px
    mi = ".col.lg";
    pull_left = ".-pull-lg-left";
    pull_right = ".-pull-lg-right";
    text_left = ".-text-lg-left";
    text_right = ".-text-lg-right"
    text_center = ".-text-lg-center"
  else if scr == 1025px
    mi = ".col.md";
    pull_left = ".-pull-md-left";
    pull_right = ".-pull-md-right";
    text_left = ".-text-md-left";
    text_right = ".-text-md-right"
    text_center = ".-text-md-center"
  else if scr == 769px
    mi = ".col.sm";
    pull_left = ".-pull-sm-left";
    pull_right = ".-pull-sm-right";
    text_left = ".-text-sm-left";
    text_right = ".-text-sm-right"
    text_center = ".-text-sm-center"

  @media screen and (max-width: scr)
    for num in (12..1)
      if num != 12
        {mi}-{num}
          width (num / 1200 * 10000)%
      else
        {mi}-{num}
          width 100%
    {pull_left}
      float left
    {pull_right}
      float right
    {text_left}
      text-align left
    {text_right}
      text-align left
    {text_center}
      text-align center

.-fluid-image > img
  display block
  max-width 100%
a
    cursor pointer
